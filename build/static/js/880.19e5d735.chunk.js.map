{"version":3,"file":"static/js/880.19e5d735.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","window","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","forEach","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","removeItem","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}