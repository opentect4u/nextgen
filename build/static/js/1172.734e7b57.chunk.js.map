{"version":3,"file":"static/js/1172.734e7b57.chunk.js","mappings":"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","sources":["Screens/Masters/Vendors/VendorForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport BtnComp from \"../../../Components/BtnComp\";\r\nimport HeadingTemplate from \"../../../Components/HeadingTemplate\";\r\nimport VError from \"../../../Components/VError\";\r\nimport TDInputTemplate from \"../../../Components/TDInputTemplate\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { Formik, FieldArray } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { Message } from \"../../../Components/Message\";\r\nimport { url } from \"../../../Address/BaseUrl\";\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nfunction VendorForm() {\r\n  const params = useParams();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate=useNavigate()\r\n  const [formValues, setValues] = useState({\r\n    v_name: \"\",\r\n    v_email: \"\",\r\n    v_gst: \"\",\r\n    v_pan: \"\",\r\n    v_reg: \"\",\r\n    v_remarks: \"\",\r\n    v_address: \"\",\r\n    dynamicFields: [{\r\n      sl_no: 0,\r\n      poc_name: \"\", poc_ph_1: \"\",poc_ph_2:\"\"\r\n    }]\r\n  });\r\n\r\n  const initialValues = {\r\n    v_name: \"\",\r\n    v_email: \"\",\r\n    v_phone:\"\",\r\n    v_gst: \"\",\r\n    v_pan: \"\",\r\n    v_reg: \"\",\r\n    v_remarks: \"\",\r\n    v_address: \"\",\r\n    dynamicFields: [{\r\n      sl_no: params.id > 0 ? 0 : formValues?.dynamicFields[0]?.sl_no,\r\n      poc_name: \"\", poc_ph_1: \"\",poc_ph_2:\"\"\r\n    }]\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    v_name: Yup.string().required(\"Name is required\"),\r\n    v_email: Yup.string()\r\n      .required(\"Email is required\")\r\n      .email(\"Incorrect email format\"),\r\n    v_phone:Yup.string().required(\"Phone is required\").length(10),\r\n    v_address: Yup.string().required(\"Address is required\"),\r\n    // v_pan:Yup.string().matches(\"[A-Z]{5}[0-9]{4}[A-Z]{1}\"),\r\n    v_pan: Yup.string(),\r\n    // v_gst:Yup.string().matches(\"^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9A-Z]{1}$\")\r\n    v_gst: Yup.string(),\r\n    v_remarks: Yup.string(),\r\n    dynamicFields: Yup.array().of(\r\n      Yup.object().shape({\r\n        poc_name: Yup.string().required(\"Contact person is required\"),\r\n        poc_ph_1: Yup.string().required(\"Phone is required\").length(10),\r\n        poc_ph_2: Yup.string().required(\"Phone is required\").length(10),\r\n\r\n      })\r\n    )\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (+params.id > 0) {\r\n      setLoading(true);\r\n\r\n\r\n      axios.post(url + \"/api/getvendor\", { id: params.id })\r\n      .then((res) => {\r\n        console.log(res.data.msg.desig_name);\r\n        setLoading(false);\r\n        setValues({\r\n          v_name: res.data?.msg?.vendor_name,\r\n          v_email: res.data?.msg?.vendor_email,\r\n          poc_name: res.data?.msg?.vendor_contact,\r\n          poc_ph_1: res.data?.msg?.vendor_phone,\r\n          poc_ph_2: res.data?.msg?.vendor_phone,\r\n          v_remarks: res.data?.msg?.vendor_remarks,\r\n          v_gst: res.data?.msg?.vendor_gst,\r\n          v_pan: res.data?.msg?.vendor_pan,\r\n          v_reg: res.data?.msg?.vendor_reg,\r\n          v_address: res.data?.msg?.vendor_address,\r\n\r\n        });\r\n      }).catch(err=>{console.log(err); navigate('/error'+'/'+err.code+'/'+err.message)});\r\n\r\n      axios.post(url + \"/api/getvendor\", { id: params.id }).then((res) => {\r\n        console.log(res.data.msg.desig_name);\r\n        setLoading(false);\r\n        setValues({\r\n          ...initialValues,\r\n          v_name: res.data.msg.vendor_name,\r\n          v_email: res.data.msg.vendor_email,\r\n          v_phone: res.data.msg.vendor_phone,\r\n          v_gst: res.data.msg.vendor_gst,\r\n          v_pan: res.data.msg.vendor_pan,\r\n          v_reg: res.data.msg.vendor_reg,\r\n          v_remarks: res.data.msg.vendor_remarks,        \r\n          v_address: res.data.msg.vendor_address,\r\n          // poc_name: res.data.msg.vendor_contact,\r\n          // poc_ph_1: res.data.msg.vendor_phone,\r\n          // poc_ph_2: res.data.msg.vendor_phone,\r\n        });\r\n      });\r\n      axios.post(url + \"/api/getvendorpoc\", { id: params.id }).then((res) => {\r\n        console.log(res.data.msg[0],'res getvendorpoc');\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          dynamicFields: res.data.msg.map((item) => ({\r\n            sl_no: item.sl_no,\r\n            poc_name: item.poc_name,\r\n            poc_ph_1: item.poc_ph_1,\r\n            poc_ph_2: item.poc_ph_2,\r\n          }))\r\n        }));\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, []);\r\n  const onSubmit = (values) => {\r\n    console.log(\"onsubmit called\")\r\n    console.log(values);\r\n    setLoading(true);\r\n    axios\r\n      .post(url + \"/api/addVendor\", {\r\n        v_id: +params.id,\r\n        user: localStorage.getItem(\"email\"),\r\n        v_name: values.v_name,\r\n        v_email: values.v_email,\r\n        v_phone:values.v_phone.toString(),\r\n        v_gst: values.v_gst,\r\n        v_pan: values.v_pan,\r\n        v_reg: values.v_reg,\r\n        v_remarks: values.v_remarks,\r\n        v_address: values.v_address,\r\n        v_poc:values.dynamicFields,\r\n        // poc_name: values.poc_name,\r\n        // poc_ph_1: values.poc_ph_1.toString(),\r\n      })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.suc > 0) {\r\n          Message(\"success\", res.data.msg);\r\n          // if (params.id == 0) formik.handleReset();\r\n        } else {\r\n          Message(\"error\", res.data.msg);\r\n        }\r\n      }).catch(err=>{console.log(err); navigate('/error'+'/'+err.code+'/'+err.message)});\r\n  };\r\n  // const formik = useFormik({\r\n  //   initialValues: +params.id > 0 ? formValues : initialValues,\r\n  //   onSubmit,\r\n  //   validationSchema,\r\n  //   validateOnMount: true,\r\n  //   enableReinitialize: true,\r\n  // });\r\n  console.log(params, \"params\");\r\n  return (\r\n    <section className=\"bg-white dark:bg-[#001529]\">\r\n      <div className=\"py-8 mx-auto w-5/6 lg:py-16\">\r\n        <HeadingTemplate\r\n          text={params.id > 0 ? \"Update vendor\" : \"Add vendor\"}\r\n        />\r\n        <Spin\r\n          indicator={<LoadingOutlined spin />}\r\n          size=\"large\"\r\n          className=\"text-green-900 dark:text-gray-400\"\r\n          spinning={loading}\r\n        >\r\n          <Formik initialValues={+params.id > 0 ? formValues : initialValues} validationSchema={validationSchema} onSubmit={onSubmit} validateOnMount={true} enableReinitialize={true}>\r\n            {({ values, handleChange, handleBlur, handleSubmit, errors, touched }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                  <div className=\"sm:col-span-2\">\r\n                    <TDInputTemplate\r\n                      placeholder=\"Type name...\"\r\n                      type=\"text\"\r\n                      label=\"Vendor name\"\r\n                      name=\"v_name\"\r\n                      formControlName={values.v_name}\r\n                      handleChange={handleChange}\r\n                      handleBlur={handleBlur}\r\n                      mode={1}\r\n                    />\r\n                    {errors.v_name && touched.v_name ? <VError title={errors.v_name} /> : null}\r\n                  </div>\r\n                  <div>\r\n                    <TDInputTemplate\r\n                      placeholder=\"Type Phone No....\"\r\n                      type=\"text\"\r\n                      label=\"Vendor phone No.\"\r\n                      name=\"v_phone\"\r\n                      formControlName={values.v_phone}\r\n                      handleChange={handleChange}\r\n                      handleBlur={handleBlur}\r\n                      mode={1}\r\n                    />\r\n                    {errors.v_phone && touched.v_phone ? <VError title={errors.v_phone} /> : null}\r\n                  </div>\r\n                  <div>\r\n                  <TDInputTemplate\r\n                      placeholder=\"Type email...\"\r\n                      type=\"text\"\r\n                      label=\"Vendor email\"\r\n                      name=\"v_email\"\r\n                      formControlName={values.v_email}\r\n                      handleChange={handleChange}\r\n                      handleBlur={handleBlur}\r\n                      mode={1}\r\n                    />\r\n                    {errors.v_email && touched.v_email ? <VError title={errors.v_email} /> : null}\r\n                  </div>\r\n                  <div className=\"sm:col-span-2 -mt-4\">\r\n                    <div className=\"grid gap-4 sm:grid-cols-3 sm:gap-6\">\r\n                      <div className=\"sm:col-span-1\">\r\n                        <TDInputTemplate\r\n                          placeholder=\"Type GST...\"\r\n                          type=\"text\"\r\n                          label=\"GST\"\r\n                          name=\"v_gst\"\r\n                          formControlName={values.v_gst}\r\n                          handleChange={handleChange}\r\n                          handleBlur={handleBlur}\r\n                          mode={1}\r\n                        />\r\n                        {errors.v_gst && touched.v_gst ? <VError title={errors.v_gst} /> : null}\r\n                      </div>\r\n                      <div className=\"sm:col-span-1\">\r\n                        <TDInputTemplate\r\n                          placeholder=\"Type PAN...\"\r\n                          type=\"text\"\r\n                          label=\"PAN\"\r\n                          name=\"v_pan\"\r\n                          formControlName={values.v_pan}\r\n                          handleChange={handleChange}\r\n                          handleBlur={handleBlur}\r\n                          mode={1}\r\n                        />\r\n                        {errors.v_pan && touched.v_pan ? <VError title={errors.v_pan} /> : null}\r\n                      </div>\r\n                      <div className=\"sm:col-span-1\">\r\n                        <TDInputTemplate\r\n                          placeholder=\"Type registration. no. ...\"\r\n                          type=\"text\"\r\n                          label=\"Registration no.\"\r\n                          name=\"v_reg\"\r\n                          formControlName={values.v_reg}\r\n                          handleChange={handleChange}\r\n                          handleBlur={handleBlur}\r\n                          mode={1}\r\n                        />\r\n                        {errors.v_reg && touched.v_reg ? <VError title={errors.v_reg} /> : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"sm:col-span-2\">\r\n                    <TDInputTemplate\r\n                      placeholder=\"Lorem Ipsum Dolor Sit...\"\r\n                      type=\"text\"\r\n                      label=\"Deals in\"\r\n                      name=\"v_remarks\"\r\n                      formControlName={values.v_remarks}\r\n                      handleChange={handleChange}\r\n                      handleBlur={handleBlur}\r\n                      mode={3}\r\n                    />\r\n                    {errors.v_remarks && touched.v_remarks ? <VError title={errors.v_remarks} /> : null}\r\n                  </div>\r\n                  <div className=\"sm:col-span-2\">\r\n                    <TDInputTemplate\r\n                      placeholder=\"Type vendor address here...\"\r\n                      type=\"text\"\r\n                      label=\"Address\"\r\n                      name=\"v_address\"\r\n                      formControlName={values.v_address}\r\n                      handleChange={handleChange}\r\n                      handleBlur={handleBlur}\r\n                      mode={3}\r\n                    />\r\n                    {errors.v_address && touched.v_address ? <VError title={errors.v_address} /> : null}\r\n                  </div>\r\n                  <FieldArray name=\"dynamicFields\">\r\n                    {({ push, remove }) => (\r\n                      <>\r\n                        {values.dynamicFields?.map((field, index) => (\r\n                          <React.Fragment key={index}>\r\n                            <div className=\"w-full\">\r\n                              <TDInputTemplate\r\n                                placeholder=\"Type contact person name...\"\r\n                                type=\"text\"\r\n                                label=\"Contact person name\"\r\n                                name={`dynamicFields[${index}].poc_name`}\r\n                                formControlName={field.poc_name}\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                mode={1}\r\n                              />\r\n                              {errors.dynamicFields?.[index]?.poc_name && touched.dynamicFields?.[index]?.poc_name ? (\r\n                                <VError title={errors.dynamicFields[index].poc_name} />\r\n                              ) : null}\r\n                            </div>\r\n                            <div>\r\n                              <TDInputTemplate\r\n                                placeholder=\"Type contact person phone...\"\r\n                                type=\"text\"\r\n                                label=\"Contact person phone no.\"\r\n                                name={`dynamicFields[${index}].poc_ph_1`}\r\n                                formControlName={field.poc_ph_1}\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                mode={1}\r\n                              />\r\n                              {errors.dynamicFields?.[index]?.poc_ph_1 && touched.dynamicFields?.[index]?.poc_ph_1 ? (\r\n                                <VError title={errors.dynamicFields[index].poc_ph_1} />\r\n                              ) : null}\r\n                            </div>\r\n                            <div>\r\n                              <TDInputTemplate\r\n                                placeholder=\"Type contact person phone...\"\r\n                                type=\"text\"\r\n                                label=\"Contact person phone no.\"\r\n                                name={`dynamicFields[${index}].poc_ph_2`}\r\n                                formControlName={field.poc_ph_2}\r\n                                handleChange={handleChange}\r\n                                handleBlur={handleBlur}\r\n                                mode={1}\r\n                              />\r\n                              {errors.dynamicFields?.[index]?.poc_ph_2 && touched.dynamicFields?.[index]?.poc_ph_2 ? (\r\n                                <VError title={errors.dynamicFields[index].poc_ph_2} />\r\n                              ) : null}\r\n                            </div>\r\n                            <div className=\"sm:col-span-2\">\r\n                              <MinusCircleOutlined onClick={() => remove(index)} />\r\n                            </div>\r\n                          </React.Fragment>\r\n                        ))}\r\n                        <div className=\"sm:col-span-2\">\r\n                          <Button type=\"dashed\" onClick={() => push({ sl_no: 0, poc_name: \"\", poc_ph_1: \"\" })} icon={<PlusOutlined />}>\r\n                            Add field\r\n                          </Button>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </FieldArray>\r\n                </div>\r\n                \r\n                  <BtnComp mode={params.id > 0 ? \"E\" : \"A\"} />\r\n                \r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Spin>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default VendorForm;\r\n"],"names":["_formValues$dynamicFi","params","useParams","loading","setLoading","useState","navigate","useNavigate","formValues","setValues","v_name","v_email","v_gst","v_pan","v_reg","v_remarks","v_address","dynamicFields","sl_no","poc_name","poc_ph_1","poc_ph_2","initialValues","v_phone","id","validationSchema","Yup","required","email","length","of","shape","useEffect","axios","post","url","then","res","_res$data","_res$data$msg","_res$data2","_res$data2$msg","_res$data3","_res$data3$msg","_res$data4","_res$data4$msg","_res$data5","_res$data5$msg","_res$data6","_res$data6$msg","_res$data7","_res$data7$msg","_res$data8","_res$data8$msg","_res$data9","_res$data9$msg","_res$data10","_res$data10$msg","console","log","data","msg","desig_name","vendor_name","vendor_email","vendor_contact","vendor_phone","vendor_remarks","vendor_gst","vendor_pan","vendor_reg","vendor_address","catch","err","code","message","prevValues","map","item","_jsx","className","children","_jsxs","HeadingTemplate","text","Spin","indicator","LoadingOutlined","spin","size","spinning","Formik","onSubmit","values","v_id","user","localStorage","getItem","toString","v_poc","suc","Message","validateOnMount","enableReinitialize","_ref","handleChange","handleBlur","handleSubmit","errors","touched","TDInputTemplate","placeholder","type","label","name","formControlName","mode","VError","title","FieldArray","_ref2","_values$dynamicFields","push","remove","_Fragment","field","index","_errors$dynamicFields","_errors$dynamicFields2","_touched$dynamicField","_touched$dynamicField2","_errors$dynamicFields3","_errors$dynamicFields4","_touched$dynamicField3","_touched$dynamicField4","_errors$dynamicFields5","_errors$dynamicFields6","_touched$dynamicField5","_touched$dynamicField6","React","concat","MinusCircleOutlined","onClick","Button","icon","PlusOutlined","BtnComp"],"sourceRoot":""}