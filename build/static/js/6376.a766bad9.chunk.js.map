{"version":3,"file":"static/js/6376.a766bad9.chunk.js","mappings":"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","sources":["Screens/Masters/Clients/ClientForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BtnComp from '../../../Components/BtnComp';\r\nimport HeadingTemplate from '../../../Components/HeadingTemplate';\r\nimport TDInputTemplate from \"../../../Components/TDInputTemplate\";\r\nimport { useFormik, FieldArray, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport VError from \"../../../Components/VError\";\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { url } from \"../../../Address/BaseUrl\";\r\nimport { Message } from \"../../../Components/Message\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { Spin } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nfunction ClientForm() {\r\n    const [loading, setLoading] = useState(false);\r\n    const navigate=useNavigate()\r\n\r\n    const params = useParams()\r\n    console.log(params, 'params')\r\n  const [data,setData]=useState()\r\n  const [formValues, setValues] = useState({\r\n    clnt_name: \"\",\r\n    clnt_email: \"\",\r\n    clnt_phn: \"\",\r\n    gst: \"\",\r\n    pan: \"\",\r\n    reg_no: \"\",\r\n    dynamicFields: [{\r\n        sl_no: 0,\r\n        poc_name: '',\r\n        poc_designation: \"\",\r\n        poc_department: \"\",\r\n        poc_email: \"\",\r\n        poc_direct_no: \"\",\r\n        poc_ext_no: \"\",\r\n        poc_ph_1: \"\",\r\n        poc_ph_2: \"\",\r\n        poc_location: \"\",\r\n        poc_address: \"\"\r\n    }]\r\n});\r\n\r\n    const initialValues = {\r\n        clnt_name: \"\",\r\n        clnt_email: \"\",\r\n        clnt_phn: \"\",\r\n        gst: \"\",\r\n        pan: \"\",\r\n        reg_no: \"\",\r\n        dynamicFields: [{\r\n            sl_no: params.id>0?0:formValues.dynamicFields[0].sl_no ,poc_name: '', poc_designation: \"\", poc_department: \"\", poc_email: \"\", poc_direct_no: \"\", poc_ext_no: \"\", poc_ph_1: \"\", poc_ph_2: \"\", poc_location: \"\", poc_address: \"\"\r\n\r\n        }]\r\n    };\r\n   \r\n\r\n\r\n    const onSubmit = (values,) => {\r\n        console.log('onSubmit')\r\n        setLoading(true)\r\n        console.log(values);\r\n        axios.post(url + \"/api/addclient\", {\r\n                c_id: +params.id,\r\n                user: localStorage.getItem(\"email\"),\r\n                c_name: values.clnt_name,\r\n                c_phone: values.clnt_phn.toString(),\r\n                c_email: values.clnt_email,\r\n                // c_location: values.poc_location,\r\n                // c_address: values.poc_address,\r\n                c_gst: values.gst,\r\n                c_pan: values.pan,\r\n                c_reg: values.reg_no,\r\n                c_poc: values.dynamicFields\r\n            })\r\n            .then((res) => {\r\n                setLoading(false);\r\n                setData(res.data?.msg)\r\n                if (res.data.suc > 0) {\r\n                    Message(\"success\", res.data.msg);\r\n                    // if (params.id == 0) formik.handleReset();\r\n                } else {\r\n                    Message(\"error\", res.data.msg);\r\n                }\r\n            }).catch(err=>{console.log(err); navigate('/error'+'/'+err.code+'/'+err.message)});;\r\n    };\r\n    const validationSchema = Yup.object({\r\n        clnt_name: Yup.string().required(\"Client's name is required\"),\r\n        clnt_email: Yup.string().required(\"Client's email is required\"),\r\n        clnt_phn: Yup.string().required(\"Client's phone no. is required\"),\r\n        // poc_location: Yup.string().required(\"Client location is required\"),\r\n        // poc_address: Yup.string().required(\"Delivery address is required\"),\r\n        gst: Yup.string().required(\"GST is required\"),\r\n        pan: Yup.string().required(\"PAN is required\"),\r\n        reg_no: Yup.string().required(\"Registration no. is required\"),\r\n        dynamicFields: Yup.array().of(\r\n            Yup.object().shape({\r\n                poc_name: Yup.string().optional(),\r\n                poc_designation: Yup.string().optional(),\r\n                poc_department: Yup.string().optional(),\r\n                poc_email: Yup.string().optional(),\r\n                poc_direct_no: Yup.string().optional(),\r\n                poc_ext_no: Yup.string().optional(),\r\n                poc_ph_1: Yup.string().optional(),\r\n                poc_ph_2: Yup.string().optional(),\r\n                poc_address: Yup.string().optional(),\r\n                poc_location: Yup.string().optional(),\r\n            })\r\n        )\r\n    });\r\n\r\n    // const formik = useFormik({\r\n    //     initialValues: +params.id > 0 ? formValues : initialValues,\r\n    //     onSubmit,\r\n    //     validationSchema,\r\n    //     validateOnMount: true,\r\n    //     enableReinitialize: true\r\n    // });\r\n    useEffect(() => {\r\n        if (+params.id > 0) {\r\n            setLoading(true)\r\n            axios.post(url + '/api/getclient', { id: params.id })\r\n            .then(res => {\r\n                console.log(res.data.msg, 'getclient show')\r\n                setData(res.data?.msg)\r\n                setLoading(false)\r\n                setValues({\r\n                    ...initialValues,\r\n                    clnt_name: res.data.msg.client_name,\r\n                    clnt_email: res.data.msg.client_email,\r\n                    clnt_phn: res.data.msg.client_phone,\r\n                    // poc_location: res?.data?.msg.client_location,\r\n                    // poc_address: res?.data?.msg.client_address,\r\n                    gst: res?.data?.msg.client_gst,\r\n                    pan: res?.data?.msg.client_pan,\r\n                    reg_no: res?.data?.msg.client_reg,\r\n                })\r\n            }).catch(err=>{console.log(err); navigate('/error'+'/'+err.code+'/'+err.message)});;\r\n            axios.post(url + \"/api/getclientpoc\", {\r\n                id: params.id \r\n            })\r\n            .then((res) => {\r\n                setLoading(false);\r\n                console.log(res.data.msg[0],'res')\r\n                setValues(prevValues => ({\r\n                    ...prevValues,\r\n                    dynamicFields: res.data.msg.map((item, index) => ({\r\n                        sl_no: item.sl_no,\r\n                        poc_name: item.poc_name,\r\n                        poc_designation: item.poc_designation,\r\n                        poc_department: item.poc_department,\r\n                        poc_email: item.poc_email,\r\n                        poc_direct_no: item.poc_direct_no,\r\n                        poc_ext_no: item.poc_ext_no,\r\n                        poc_ph_1: item.poc_ph_1,\r\n                        poc_ph_2: item.poc_ph_2,\r\n                        poc_location: item.poc_location,\r\n                        poc_address: item.poc_address\r\n                    }))\r\n\r\n                }))\r\n               \r\n            }).catch(err=>{console.log(err); navigate('/error'+'/'+err.code+'/'+err.message)});;\r\n        }\r\n        console.log(formValues, 'formValues')\r\n        console.log(params.id,'params.id')\r\n    }, [params.id])\r\n    return (\r\n\r\n        <section  className=\"bg-transparent dark:bg-[#001529]\">\r\n          {/* {params.id>0 && data && <PrintComp toPrint={data} title={'Department'}/>} */}\r\n          <HeadingTemplate\r\n              text={params.id > 0 ? \"Update client\" : \"Add client\"}\r\n              mode={params.id>0?1:0}\r\n              title={'Client'}\r\n              data={params.id && data?data:''}\r\n            />\r\n          <div className=\"w-full bg-white p-6 rounded-2xl\">\r\n            <Spin\r\n                indicator={<LoadingOutlined spin />}\r\n                size=\"large\"\r\n                className=\"text-green-900 dark:text-gray-400\"\r\n                spinning={loading}\r\n            >\r\n                <Formik\r\n                    initialValues={+params.id > 0 ? formValues : initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}\r\n                    validateOnMount={true}\r\n                    enableReinitialize={true}\r\n                    \r\n                >\r\n                    {({ values, handleChange, handleBlur,handleSubmit, errors, touched }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"grid gap-4 sm:grid-cols-2 sm:gap-6\">\r\n                                <div className=\"sm:col-span-2\">\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"Type user name...\"\r\n                                        type=\"text\"\r\n                                        label=\"Client name\"\r\n                                        name=\"clnt_name\"\r\n                                        formControlName={values.clnt_name}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.clnt_name && touched.clnt_name && <VError title={errors.clnt_name} />}\r\n                                </div>\r\n                                <div className=\"w-full\">\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"Type client's email...\"\r\n                                        type=\"text\"\r\n                                        label=\"Email\"\r\n                                        name=\"clnt_email\"\r\n                                        formControlName={values.clnt_email}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.clnt_email && touched.clnt_email && <VError title={errors.clnt_email} />}\r\n                                </div>\r\n                                <div>\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"+91 123-456-7890\"\r\n                                        type=\"number\"\r\n                                        label=\"Phone No.\"\r\n                                        name=\"clnt_phn\"\r\n                                        formControlName={values.clnt_phn}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.clnt_phn && touched.clnt_phn && <VError title={errors.clnt_phn} />}\r\n                                </div>\r\n                                <div>\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"Type GST\"\r\n                                        type=\"text\"\r\n                                        label=\"GST\"\r\n                                        name=\"gst\"\r\n                                        formControlName={values.gst}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.gst && touched.gst && <VError title={errors.gst} />}\r\n                                </div>\r\n                                <div>\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"Type PAN\"\r\n                                        type=\"text\"\r\n                                        label=\"PAN\"\r\n                                        name=\"pan\"\r\n                                        formControlName={values.pan}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.pan && touched.pan && <VError title={errors.pan} />}\r\n                                </div>\r\n                                <div className=\"w-full sm:col-span-2\">\r\n                                    <TDInputTemplate\r\n                                        placeholder=\"Type Reg No.\"\r\n                                        type=\"text\"\r\n                                        label=\"Reg No.\"\r\n                                        name=\"reg_no\"\r\n                                        formControlName={values.reg_no}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        mode={1}\r\n                                    />\r\n                                    {errors.reg_no && touched.reg_no && <VError title={errors.reg_no} />}\r\n                                </div>\r\n                                <FieldArray name=\"dynamicFields\">\r\n                                    {({ push, remove }) => (\r\n                                        <>\r\n                                            {values.dynamicFields.map((field, index) => (\r\n                                                <React.Fragment key={index}>\r\n                                                    <div>\r\n                                                        <TDInputTemplate\r\n                                                            placeholder=\"Type the name of Contact Person...\"\r\n                                                            type=\"text\"\r\n                                                            label=\"Contact Person\"\r\n                                                            name={`dynamicFields[${index}].poc_name`}\r\n                                                            formControlName={values.dynamicFields[index]?.poc_name || \"\"}\r\n                                                            handleChange={handleChange}\r\n                                                            handleBlur={handleBlur}\r\n                                                            mode={1}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Designation...\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Designation\"\r\n                                                                name={`dynamicFields[${index}].poc_designation`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_designation || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                            {/* {formik.errors.dynamicFields && formik.errors.dynamicFields[index] && formik.errors.dynamicFields[index].designation && formik.touched.dynamicFields && formik.touched.dynamicFields[index] && formik.touched.dynamicFields[index].designation ? (\r\n                                                        <VError title={formik.errors.dynamicFields[index].designation} />\r\n                                                    ) : null} */}\r\n\r\n                                                    </div>\r\n                                                    <div >\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC department...\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Department\"\r\n                                                                name={`dynamicFields[${index}].poc_department`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_department || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                            {/* {formik.errors.dynamicFields && formik.errors.dynamicFields[index] && formik.errors.dynamicFields[index].designation && formik.touched.dynamicFields && formik.touched.dynamicFields[index] && formik.touched.dynamicFields[index].designation ? (\r\n                                                        <VError title={formik.errors.dynamicFields[index].designation} />\r\n                                                    ) : null} */}\r\n                                                        </div>\r\n                                                        <div >\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Email...\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Email\"\r\n                                                                name={`dynamicFields[${index}].poc_email`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_email || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div >\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Direct No.\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Direct No\"\r\n                                                                name={`dynamicFields[${index}].poc_direct_no`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_direct_no || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Extension No.\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Extension No\"\r\n                                                                name={`dynamicFields[${index}].poc_ext_no`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_ext_no || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div >\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Primary Phone No.\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Primary Phone No.\"\r\n                                                                name={`dynamicFields[${index}].poc_ph_1`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_ph_1 || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <TDInputTemplate\r\n                                                                placeholder=\"Type POC Secondary Phone No.\"\r\n                                                                type=\"text\"\r\n                                                                label=\"POC Secondary Phone No.\"\r\n                                                                name={`dynamicFields[${index}].poc_ph_2`}\r\n                                                                formControlName={values.dynamicFields[index]?.poc_ph_2 || \"\"}\r\n                                                                handleChange={handleChange}\r\n                                                                handleBlur={handleBlur}\r\n                                                                mode={1}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div>\r\n                                        <TDInputTemplate\r\n                                            placeholder=\"Type Client Location...\"\r\n                                            type=\"text\"\r\n                                            label=\"Client Location\"\r\n                                            name={`dynamicFields[${index}].poc_location`}\r\n                                            formControlName={values.dynamicFields[index]?.poc_location || \"\"}\r\n                                            handleChange={handleChange}\r\n                                            handleBlur={handleBlur}\r\n                                            mode={3}\r\n                                        />\r\n                                        {/* {formik.errors.clnt_loc && formik.touched.clnt_loc ? (\r\n                                            <VError title={formik.errors.clnt_loc} />\r\n                                        ) : null} */}\r\n                                    </div>\r\n                                    <div>\r\n                                        <TDInputTemplate\r\n                                            placeholder=\"Type Delivery Address...\"\r\n                                            type=\"text\"\r\n                                            label=\"Delivery Address\"\r\n                                            name={`dynamicFields[${index}].poc_address`}\r\n                                            formControlName={values.dynamicFields[index]?.poc_address || \"\"}\r\n                                            handleChange={handleChange}\r\n                                            handleBlur={handleBlur}\r\n                                            mode={3}\r\n                                        />\r\n                                        {/* {formik.errors.delvry_add && formik.touched.delvry_add ? (\r\n                                            <VError title={formik.errors.delvry_add} />\r\n                                        ) : null} */}\r\n                                    </div>\r\n                                                    <div className=\"sm:col-span-2\">\r\n                                                        <MinusCircleOutlined onClick={() => remove(index)} />\r\n                                                    </div>\r\n                                                </React.Fragment>\r\n                                            ))}\r\n                                            <div className=\"sm:col-span-2\">\r\n                                                <Button\r\n                                                    onClick={() => push({ sl_no: 0, poc_name: \"\", poc_designation: \"\", poc_department: \"\", poc_email: \"\", poc_direct_no: \"\", poc_ext_no: \"\", poc_ph_1: \"\", poc_ph_2: \"\", poc_location: \"\", poc_address: \"\" })}\r\n                                                    icon={<PlusOutlined />}\r\n                                                >\r\n                                                    Add field\r\n                                                </Button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </FieldArray>\r\n                                 { params.id>0 &&   <>\r\n                <div className=\"w-full\">\r\n            <label className=\"block mb-2 text-sm font-semibold text-emerald-500 dark:text-gray-100\">\r\n         Created By\r\n      </label>\r\n              <input  className=\"bg-bg-white border border-green-500 text-gray-800 text-sm rounded-lg  focus:border-green-500 active:border-green-600 focus:ring-green-600 focus:border-1 duration-500 block w-full p-2.5 dark:bg-bg-white dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" disabled={true} value={data?.created_by}/>\r\n            </div>\r\n            <div className=\"w-full\">\r\n            <label className=\"block mb-2 text-sm font-semibold text-emerald-500 dark:text-gray-100\">\r\n         Created At\r\n      </label>\r\n              <input  className=\"bg-bg-white border border-green-500 text-gray-800 text-sm rounded-lg  focus:border-green-500 active:border-green-600 focus:ring-green-600 focus:border-1 duration-500 block w-full p-2.5 dark:bg-bg-white dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" disabled={true} value={data?.created_at?.split('T').join( ' ')}/>\r\n            </div>\r\n            <div className=\"w-full\">\r\n            <label className=\"block mb-2 text-sm font-semibold text-emerald-500 dark:text-gray-100\">\r\n         Modified By\r\n      </label>\r\n              <input  className=\"bg-bg-white border border-green-500 text-gray-800 text-sm rounded-lg  focus:border-green-500 active:border-green-600 focus:ring-green-600 focus:border-1 duration-500 block w-full p-2.5 dark:bg-bg-white dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" disabled={true} value={data?.modified_by}/>\r\n            </div>\r\n            <div className=\"w-full\">\r\n            <label className=\"block mb-2 text-sm font-semibold text-emerald-500 dark:text-gray-100\">\r\n       Modified at\r\n      </label>\r\n              <input  className=\"bg-bg-white border border-green-500 text-gray-800 text-sm rounded-lg  focus:border-green-500 active:border-green-600 focus:ring-green-600 focus:border-1 duration-500 block w-full p-2.5 dark:bg-bg-white dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\" disabled={true} value={data?.modified_at?.split('T').join( ' ')}/>\r\n            </div>\r\n              </>}\r\n                            </div>\r\n                            <BtnComp mode={params.id>0?'E':'A'}  />\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Spin>\r\n        </div>\r\n    </section>\r\n    )\r\n}\r\n\r\nexport default ClientForm\r\n"],"names":["loading","setLoading","useState","navigate","useNavigate","params","useParams","console","log","data","setData","formValues","setValues","clnt_name","clnt_email","clnt_phn","gst","pan","reg_no","dynamicFields","sl_no","poc_name","poc_designation","poc_department","poc_email","poc_direct_no","poc_ext_no","poc_ph_1","poc_ph_2","poc_location","poc_address","initialValues","id","validationSchema","Yup","required","of","shape","optional","useEffect","axios","post","url","then","res","_res$data2","_res$data3","_res$data4","_res$data5","msg","client_name","client_email","client_phone","client_gst","client_pan","client_reg","catch","err","code","message","prevValues","map","item","index","_jsxs","className","children","_jsx","HeadingTemplate","text","mode","title","Spin","indicator","LoadingOutlined","spin","size","spinning","Formik","onSubmit","values","c_id","user","localStorage","getItem","c_name","c_phone","toString","c_email","c_gst","c_pan","c_reg","c_poc","_res$data","suc","Message","validateOnMount","enableReinitialize","_ref","_data$created_at","_data$modified_at","handleChange","handleBlur","handleSubmit","errors","touched","TDInputTemplate","placeholder","type","label","name","formControlName","VError","FieldArray","_ref2","push","remove","_Fragment","field","_values$dynamicFields","_values$dynamicFields2","_values$dynamicFields3","_values$dynamicFields4","_values$dynamicFields5","_values$dynamicFields6","_values$dynamicFields7","_values$dynamicFields8","_values$dynamicFields9","_values$dynamicFields10","React","concat","MinusCircleOutlined","onClick","Button","icon","PlusOutlined","disabled","value","created_by","created_at","split","join","modified_by","modified_at","BtnComp"],"sourceRoot":""}