{"version":3,"file":"static/js/880.3d7b44ba.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/index.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\nfunction useWillChange() {\n    return useConstant(() => new WillChangeMotionValue(\"auto\"));\n}\n\nexport { WillChangeMotionValue, useWillChange };\n","import { WillChangeMotionValue } from './index.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","keepAlive","immediate","i","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","window","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}